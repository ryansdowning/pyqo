openapi: 3.0.3
info:
  title: pyqo API
  version: 0.0.1
  description: pyqo
paths:
  /app/item-properties/:
    get:
      operationId: app_item_properties_list
      tags:
      - app
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemProperty'
          description: ''
    post:
      operationId: app_item_properties_create
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemProperty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ItemProperty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ItemProperty'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemProperty'
          description: ''
  /app/item-properties/{id}/:
    get:
      operationId: app_item_properties_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - app
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemProperty'
          description: ''
    put:
      operationId: app_item_properties_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemProperty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ItemProperty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ItemProperty'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemProperty'
          description: ''
    patch:
      operationId: app_item_properties_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedItemProperty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedItemProperty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedItemProperty'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemProperty'
          description: ''
    delete:
      operationId: app_item_properties_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - app
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /app/items/:
    get:
      operationId: app_items_list
      tags:
      - app
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
          description: ''
    post:
      operationId: app_items_create
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
  /app/items/{id}/:
    get:
      operationId: app_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - app
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    put:
      operationId: app_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    patch:
      operationId: app_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedItem'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    delete:
      operationId: app_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - app
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /app/properties/:
    get:
      operationId: app_properties_list
      tags:
      - app
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property'
          description: ''
    post:
      operationId: app_properties_create
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Property'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Property'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
  /app/properties/{id}/:
    get:
      operationId: app_properties_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - app
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    put:
      operationId: app_properties_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Property'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Property'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    patch:
      operationId: app_properties_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    delete:
      operationId: app_properties_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - app
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /app/scans/:
    get:
      operationId: app_scans_list
      tags:
      - app
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scan'
          description: ''
    post:
      operationId: app_scans_create
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scan'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scan'
          description: ''
  /app/scans/{id}/:
    get:
      operationId: app_scans_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - app
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scan'
          description: ''
    put:
      operationId: app_scans_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scan'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scan'
          description: ''
    patch:
      operationId: app_scans_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedScan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedScan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedScan'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scan'
          description: ''
    delete:
      operationId: app_scans_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - app
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /token/:
    post:
      operationId: token_create
      tags:
      - token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    Item:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        owner:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        code:
          type: string
          format: uuid
        scans:
          type: array
          items:
            type: integer
          readOnly: true
        properties:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - code
      - created_at
      - id
      - owner
      - properties
      - scans
      - updated_at
    ItemProperty:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        item:
          type: integer
        property:
          type: integer
        value: {}
      required:
      - created_at
      - id
      - item
      - property
      - updated_at
      - value
    PatchedItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        owner:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        code:
          type: string
          format: uuid
        scans:
          type: array
          items:
            type: integer
          readOnly: true
        properties:
          type: array
          items:
            type: integer
          readOnly: true
    PatchedItemProperty:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        item:
          type: integer
        property:
          type: integer
        value: {}
    PatchedProperty:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        owner:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        label:
          type: string
          maxLength: 255
        item_properties:
          type: array
          items:
            type: integer
          readOnly: true
    PatchedScan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        owner:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        item:
          type: integer
        location:
          type: string
          maxLength: 255
    Property:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        owner:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        label:
          type: string
          maxLength: 255
        item_properties:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - created_at
      - id
      - item_properties
      - label
      - owner
      - updated_at
    Scan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        owner:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        item:
          type: integer
        location:
          type: string
          maxLength: 255
      required:
      - created_at
      - id
      - item
      - location
      - owner
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
